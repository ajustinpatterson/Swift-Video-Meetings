{"ast":null,"code":"var _jsxFileName = \"/Users/justinpatterson/git-stuff/codeworks/projects/name-to-be-changed/client/src/containers/App/App.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport './App.css';\nimport Landing from '../../components/Landing/Landing';\n\nfunction App({\n  socket\n}) {\n  const connectToNewUser = userId => {};\n\n  let myVideo = /*#__PURE__*/React.createElement(\"video\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  });\n  const videoRef = useRef(null);\n  useEffect(() => {\n    socket.on('connect', () => {\n      socket.emit('join-room', 12345, socket.id);\n      socket.on('user-connected', userId => {\n        console.log(userId);\n        connectToNewUser(userId);\n      });\n    });\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      console.log('stream: ', stream);\n      videoRef.current.video.srcObject = stream;\n      console.log('stream media', stream); //addVideoStream(myVideo, stream);\n      // myPeer.on('call', (call) => {\n      //   call.answer(stream);\n      //   const video = <video />;\n      //   call.on('stream', (userVideoStream) => {\n      //     addVideoStream(video, userVideoStream);\n      //   });\n      // });\n\n      const res = stream.getVideoTracks();\n      console.log(res);\n      socket.emit('stream', stream);\n    });\n\n    function addVideoStream(video, stream) {\n      myVideo = /*#__PURE__*/React.createElement(\"video\", {\n        src: stream,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      });\n    }\n  }, []); // socket.on('test', (data: any) => {\n  //   console.log(data);\n  // });\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"App\">\n    //   {myVideo}\n    //   {console.log(socket)}\n    //   {console.log(videoRef)}\n    //   <Webcam ref={videoRef} />\n    // </div>\n    React.createElement(Landing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    })\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/justinpatterson/git-stuff/codeworks/projects/name-to-be-changed/client/src/containers/App/App.tsx"],"names":["React","useEffect","useRef","Landing","App","socket","connectToNewUser","userId","myVideo","videoRef","on","emit","id","console","log","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","res","getVideoTracks","addVideoStream"],"mappings":";AAAA,OAAOA,KAAP,IAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAIA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,kCAApB;;AAMA,SAASC,GAAT,CAAa;AAAEC,EAAAA;AAAF,CAAb,EAAgC;AAC9B,QAAMC,gBAAgB,GAAIC,MAAD,IAAoB,CAAE,CAA/C;;AACA,MAAIC,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;AAEA,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAW;AACnBI,IAAAA,MAAM,CAACK,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBL,MAAAA,MAAM,CAACM,IAAP,CAAY,WAAZ,EAAyB,KAAzB,EAAgCN,MAAM,CAACO,EAAvC;AACAP,MAAAA,MAAM,CAACK,EAAP,CAAU,gBAAV,EAA6BH,MAAD,IAAoB;AAC9CM,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAD,QAAAA,gBAAgB,CAACC,MAAD,CAAhB;AACD,OAHD;AAID,KAND;AAOAQ,IAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AACZC,MAAAA,KAAK,EAAE,IADK;AAEZC,MAAAA,KAAK,EAAE;AAFK,KADhB,EAKGC,IALH,CAKSC,MAAD,IAAyB;AAC7BR,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,MAAxB;AACCZ,MAAAA,QAAQ,CAACa,OAAV,CAA2BJ,KAA3B,CAAiCK,SAAjC,GAA6CF,MAA7C;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BO,MAA5B,EAH6B,CAI7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,YAAMG,GAAG,GAAGH,MAAM,CAACI,cAAP,EAAZ;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACAnB,MAAAA,MAAM,CAACM,IAAP,CAAY,QAAZ,EAAsBU,MAAtB;AACD,KApBH;;AAsBA,aAASK,cAAT,CAAwBR,KAAxB,EAAoCG,MAApC,EAAiD;AAC/Cb,MAAAA,OAAO,gBAAG;AAAO,QAAA,GAAG,EAAEa,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACD;AACF,GAjCQ,EAiCN,EAjCM,CAAT,CAN8B,CAyC9B;AACA;AACA;;AAEA;AAAA;AACE;AACA;AACA;AAEA;AACA;AACA;AACA,wBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAUD;;AAED,eAAejB,GAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Peer from 'peerjs';\nimport Webcam from 'react-webcam';\nimport Meeting from '../../components/Meeting/Meeting';\nimport './App.css';\nimport Landing from '../../components/Landing/Landing';\n\ninterface props {\n  socket: any;\n}\n\nfunction App({ socket }: props) {\n  const connectToNewUser = (userId: string) => {};\n  let myVideo = <video />;\n\n  const videoRef = useRef(null);\n\n  useEffect((): any => {\n    socket.on('connect', () => {\n      socket.emit('join-room', 12345, socket.id);\n      socket.on('user-connected', (userId: string) => {\n        console.log(userId);\n        connectToNewUser(userId);\n      });\n    });\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true,\n      })\n      .then((stream: MediaStream) => {\n        console.log('stream: ', stream);\n        (videoRef.current! as any).video.srcObject = stream;\n        console.log('stream media', stream);\n        //addVideoStream(myVideo, stream);\n        // myPeer.on('call', (call) => {\n        //   call.answer(stream);\n        //   const video = <video />;\n        //   call.on('stream', (userVideoStream) => {\n        //     addVideoStream(video, userVideoStream);\n        //   });\n        // });\n        const res = stream.getVideoTracks();\n        console.log(res);\n        socket.emit('stream', stream);\n      });\n\n    function addVideoStream(video: any, stream: any) {\n      myVideo = <video src={stream} />;\n    }\n  }, []);\n\n  // socket.on('test', (data: any) => {\n  //   console.log(data);\n  // });\n\n  return (\n    // <div className=\"App\">\n    //   {myVideo}\n    //   {console.log(socket)}\n\n    //   {console.log(videoRef)}\n    //   <Webcam ref={videoRef} />\n    // </div>\n    <Landing />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}