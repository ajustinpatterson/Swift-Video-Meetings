{"ast":null,"code":"var _jsxFileName = \"/Users/justinpatterson/git-stuff/codeworks/projects/name-to-be-changed/client/src/containers/App/App.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport './App.css';\n\nfunction App({\n  socket\n}) {\n  const connectToNewUser = userId => {};\n\n  let myVideo = /*#__PURE__*/React.createElement(\"video\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  });\n  const videoRef = useRef(null);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      console.log('stream: ', stream);\n      videoRef.current.video.srcObject = stream; //addVideoStream(myVideo, stream);\n      // myPeer.on('call', (call) => {\n      //   call.answer(stream);\n      //   const video = <video />;\n      //   call.on('stream', (userVideoStream) => {\n      //     addVideoStream(video, userVideoStream);\n      //   });\n      // });\n\n      socket.on('connect', () => {\n        socket.emit('join-room', 12345, socket.id);\n        socket.on('user-connected', userId => {\n          console.log(userId);\n          connectToNewUser(userId);\n        });\n      });\n    });\n\n    function addVideoStream(video, stream) {\n      myVideo = /*#__PURE__*/React.createElement(\"video\", {\n        src: stream,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      });\n    }\n  }, []); // socket.on('test', (data: any) => {\n  //   console.log(data);\n  // });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, console.log(videoRef), /*#__PURE__*/React.createElement(Webcam, {\n    ref: videoRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/justinpatterson/git-stuff/codeworks/projects/name-to-be-changed/client/src/containers/App/App.tsx"],"names":["React","useEffect","useRef","Webcam","App","socket","connectToNewUser","userId","myVideo","videoRef","navigator","mediaDevices","getUserMedia","video","audio","then","stream","console","log","current","srcObject","on","emit","id","addVideoStream"],"mappings":";AAAA,OAAOA,KAAP,IAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAO,WAAP;;AAMA,SAASC,GAAT,CAAa;AAAEC,EAAAA;AAAF,CAAb,EAAgC;AAC9B,QAAMC,gBAAgB,GAAIC,MAAD,IAAoB,CAAE,CAA/C;;AACA,MAAIC,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;AAEA,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAW;AACnBS,IAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AACZC,MAAAA,KAAK,EAAE,IADK;AAEZC,MAAAA,KAAK,EAAE;AAFK,KADhB,EAKGC,IALH,CAKSC,MAAD,IAAyB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACCP,MAAAA,QAAQ,CAACU,OAAV,CAA2BN,KAA3B,CAAiCO,SAAjC,GAA6CJ,MAA7C,CAF6B,CAG7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAX,MAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBhB,QAAAA,MAAM,CAACiB,IAAP,CAAY,WAAZ,EAAyB,KAAzB,EAAgCjB,MAAM,CAACkB,EAAvC;AACAlB,QAAAA,MAAM,CAACgB,EAAP,CAAU,gBAAV,EAA6Bd,MAAD,IAAoB;AAC9CU,UAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACAD,UAAAA,gBAAgB,CAACC,MAAD,CAAhB;AACD,SAHD;AAID,OAND;AAOD,KAvBH;;AAyBA,aAASiB,cAAT,CAAwBX,KAAxB,EAAoCG,MAApC,EAAiD;AAC/CR,MAAAA,OAAO,gBAAG;AAAO,QAAA,GAAG,EAAEQ,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACD;AACF,GA7BQ,EA6BN,EA7BM,CAAT,CAN8B,CAqC9B;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGC,OAAO,CAACC,GAAR,CAAYT,QAAZ,CANH,eAOE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Peer from 'peerjs';\nimport Webcam from 'react-webcam';\nimport Meeting from '../../components/Meeting/Meeting';\nimport './App.css';\n\ninterface props {\n  socket: any;\n}\n\nfunction App({ socket }: props) {\n  const connectToNewUser = (userId: string) => {};\n  let myVideo = <video />;\n\n  const videoRef = useRef(null);\n\n  useEffect((): any => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true,\n      })\n      .then((stream: MediaStream) => {\n        console.log('stream: ', stream);\n        (videoRef.current! as any).video.srcObject = stream;\n        //addVideoStream(myVideo, stream);\n        // myPeer.on('call', (call) => {\n        //   call.answer(stream);\n        //   const video = <video />;\n        //   call.on('stream', (userVideoStream) => {\n        //     addVideoStream(video, userVideoStream);\n        //   });\n        // });\n        socket.on('connect', () => {\n          socket.emit('join-room', 12345, socket.id);\n          socket.on('user-connected', (userId: string) => {\n            console.log(userId);\n            connectToNewUser(userId);\n          });\n        });\n      });\n\n    function addVideoStream(video: any, stream: any) {\n      myVideo = <video src={stream} />;\n    }\n  }, []);\n\n  // socket.on('test', (data: any) => {\n  //   console.log(data);\n  // });\n\n  return (\n    <div className=\"App\">\n      {/* //   {myVideo}\n    //   {console.log(socket)}\n    //   <a href=\"http://localhost:3002\" target=\"_blank\">\n    //     click here\n    //   </a> */}\n      {console.log(videoRef)}\n      <Webcam ref={videoRef} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}