{"ast":null,"code":"var _jsxFileName = \"/Users/justinpatterson/git-stuff/codeworks/projects/name-to-be-changed/client/src/containers/App/App.tsx\";\nimport React, { useEffect } from 'react';\nimport Peer from 'peerjs';\nimport './App.css';\n\nfunction App({\n  socket\n}) {\n  const connectToNewUser = userId => {};\n\n  const myPeer = new Peer(undefined, {\n    host: '/',\n    port: 3002\n  });\n  const peers = {};\n  let myVideo = /*#__PURE__*/React.createElement(\"video\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  });\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      addVideoStream(myVideo, stream);\n      console.log('inside video maker thing', myVideo);\n      myPeer.on('call', call => {\n        call.answer(stream);\n        const video = /*#__PURE__*/React.createElement(\"video\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }\n        });\n        call.on('stream', userVideoStream => {\n          addVideoStream(video, userVideoStream);\n        });\n      });\n      socket.on('connect', () => {\n        socket.emit('join-room', 12345, socket.id);\n        socket.on('user-connected', userId => {\n          console.log(userId);\n          connectToNewUser(userId);\n        });\n      });\n    });\n\n    function addVideoStream(video, stream) {\n      myVideo = /*#__PURE__*/React.createElement(\"video\", {\n        src: stream,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      });\n    }\n  }, []); // socket.on('test', (data: any) => {\n  //   console.log(data);\n  // });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, myVideo, console.log(socket), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3002\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"click here\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/justinpatterson/git-stuff/codeworks/projects/name-to-be-changed/client/src/containers/App/App.tsx"],"names":["React","useEffect","Peer","App","socket","connectToNewUser","userId","myPeer","undefined","host","port","peers","myVideo","navigator","mediaDevices","getUserMedia","video","audio","then","stream","addVideoStream","console","log","on","call","answer","userVideoStream","emit","id"],"mappings":";AAAA,OAAOA,KAAP,IAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,WAAP;;AAOA,SAASC,GAAT,CAAa;AAAEC,EAAAA;AAAF,CAAb,EAAgC;AAC9B,QAAMC,gBAAgB,GAAIC,MAAD,IAAoB,CAAE,CAA/C;;AAEA,QAAMC,MAAM,GAAG,IAAIL,IAAJ,CAASM,SAAT,EAAoB;AACjCC,IAAAA,IAAI,EAAE,GAD2B;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAApB,CAAf;AAKA,QAAMC,KAAK,GAAG,EAAd;AACA,MAAIC,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;AAEAX,EAAAA,SAAS,CAAC,MAAW;AACnBY,IAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AACZC,MAAAA,KAAK,EAAE,IADK;AAEZC,MAAAA,KAAK,EAAE;AAFK,KADhB,EAKGC,IALH,CAKSC,MAAD,IAAyB;AAC7BC,MAAAA,cAAc,CAACR,OAAD,EAAUO,MAAV,CAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCV,OAAxC;AAEAL,MAAAA,MAAM,CAACgB,EAAP,CAAU,MAAV,EAAmBC,IAAD,IAAU;AAC1BA,QAAAA,IAAI,CAACC,MAAL,CAAYN,MAAZ;AACA,cAAMH,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACAQ,QAAAA,IAAI,CAACD,EAAL,CAAQ,QAAR,EAAmBG,eAAD,IAAqB;AACrCN,UAAAA,cAAc,CAACJ,KAAD,EAAQU,eAAR,CAAd;AACD,SAFD;AAGD,OAND;AAOAtB,MAAAA,MAAM,CAACmB,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBnB,QAAAA,MAAM,CAACuB,IAAP,CAAY,WAAZ,EAAyB,KAAzB,EAAgCvB,MAAM,CAACwB,EAAvC;AACAxB,QAAAA,MAAM,CAACmB,EAAP,CAAU,gBAAV,EAA6BjB,MAAD,IAAoB;AAC9Ce,UAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACAD,UAAAA,gBAAgB,CAACC,MAAD,CAAhB;AACD,SAHD;AAID,OAND;AAOD,KAvBH;;AAyBA,aAASc,cAAT,CAAwBJ,KAAxB,EAAoCG,MAApC,EAAiD;AAC/CP,MAAAA,OAAO,gBAAG;AAAO,QAAA,GAAG,EAAEO,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACD;AACF,GA7BQ,EA6BN,EA7BM,CAAT,CAX8B,CA0C9B;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,OADH,EAEGS,OAAO,CAACC,GAAR,CAAYlB,MAAZ,CAFH,eAGE;AAAG,IAAA,IAAI,EAAC,uBAAR;AAAgC,IAAA,MAAM,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF;AASD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Peer from 'peerjs';\nimport Meeting from '../../components/Meeting/Meeting';\nimport './App.css';\nimport WebCam from 'react-webcam';\n\ninterface props {\n  socket: any;\n}\n\nfunction App({ socket }: props) {\n  const connectToNewUser = (userId: string) => {};\n\n  const myPeer = new Peer(undefined, {\n    host: '/',\n    port: 3002,\n  });\n\n  const peers = {};\n  let myVideo = <video />;\n\n  useEffect((): any => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true,\n      })\n      .then((stream: MediaStream) => {\n        addVideoStream(myVideo, stream);\n        console.log('inside video maker thing', myVideo);\n\n        myPeer.on('call', (call) => {\n          call.answer(stream);\n          const video = <video />;\n          call.on('stream', (userVideoStream) => {\n            addVideoStream(video, userVideoStream);\n          });\n        });\n        socket.on('connect', () => {\n          socket.emit('join-room', 12345, socket.id);\n          socket.on('user-connected', (userId: string) => {\n            console.log(userId);\n            connectToNewUser(userId);\n          });\n        });\n      });\n\n    function addVideoStream(video: any, stream: any) {\n      myVideo = <video src={stream} />;\n    }\n  }, []);\n\n  // socket.on('test', (data: any) => {\n  //   console.log(data);\n  // });\n\n  return (\n    <div className=\"App\">\n      {myVideo}\n      {console.log(socket)}\n      <a href=\"http://localhost:3002\" target=\"_blank\">\n        click here\n      </a>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}