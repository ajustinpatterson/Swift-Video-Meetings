{"ast":null,"code":"import { gql, ApolloClient, InMemoryCache, HttpLink } from '@apollo/client';\nconst userClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'http://localhost:3002/graphql'\n  }),\n  cache: new InMemoryCache()\n});\nexport const GET_USERS = gql`\n  query GetAllUsers {\n    getUsers {\n      _id\n    }\n  }\n`;\nexport const CREATE_USER = gql`\n  mutation CreateUser($userDetails: CreateUserInput!) {\n    createUser(userDetails: $userDetails) {\n      email\n      familyName\n      givenName\n      googleId\n      imageUrl\n      name\n    }\n  }\n`;\nexport const UPDATE_USER = gql`\n  mutation UpdateUser($input: MutationUpdateUser) {\n    updateUser(input: userDetails) {\n      id\n      email\n      familyName\n      givenName\n      googleId\n      imageUrl\n      name\n      bio\n      status\n    }\n  }\n`;\nexport const UPDATE_EMAIL = gql`\nmutation UpdateEmail($input: MutationUpdateEmail) {\n  updateEmail({id, email}: $input) {\n    id\n    email\n  }\n}\n`;\nexport const DELETE_USER = gql`\n  mutation DeleteUser($input: MutationDeleteUser) {\n    deleteUser(id: $input) {\n      id\n    }\n  }\n`;\nexport default userClient;","map":{"version":3,"sources":["/Users/justinpatterson/git-stuff/codeworks/projects/name-to-be-changed/client/src/graphql/Client.ts"],"names":["gql","ApolloClient","InMemoryCache","HttpLink","userClient","link","uri","cache","GET_USERS","CREATE_USER","UPDATE_USER","UPDATE_EMAIL","DELETE_USER"],"mappings":"AAAA,SAASA,GAAT,EAAcC,YAAd,EAA4BC,aAA5B,EAA2CC,QAA3C,QAA2D,gBAA3D;AACA,MAAMC,UAAU,GAAG,IAAIH,YAAJ,CAAiB;AAClCI,EAAAA,IAAI,EAAE,IAAIF,QAAJ,CAAa;AACjBG,IAAAA,GAAG,EAAE;AADY,GAAb,CAD4B;AAIlCC,EAAAA,KAAK,EAAE,IAAIL,aAAJ;AAJ2B,CAAjB,CAAnB;AAOA,OAAO,MAAMM,SAAS,GAAGR,GAAI;;;;;;CAAtB;AAQP,OAAO,MAAMS,WAAW,GAAGT,GAAI;;;;;;;;;;;CAAxB;AAaP,OAAO,MAAMU,WAAW,GAAGV,GAAI;;;;;;;;;;;;;;CAAxB;AAgBP,OAAO,MAAMW,YAAY,GAAGX,GAAI;;;;;;;CAAzB;AASP,OAAO,MAAMY,WAAW,GAAGZ,GAAI;;;;;;CAAxB;AAQP,eAAeI,UAAf","sourcesContent":["import { gql, ApolloClient, InMemoryCache, HttpLink } from '@apollo/client';\nconst userClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'http://localhost:3002/graphql',\n  }),\n  cache: new InMemoryCache(),\n});\n\nexport const GET_USERS = gql`\n  query GetAllUsers {\n    getUsers {\n      _id\n    }\n  }\n`;\n\nexport const CREATE_USER = gql`\n  mutation CreateUser($userDetails: CreateUserInput!) {\n    createUser(userDetails: $userDetails) {\n      email\n      familyName\n      givenName\n      googleId\n      imageUrl\n      name\n    }\n  }\n`;\n\nexport const UPDATE_USER = gql`\n  mutation UpdateUser($input: MutationUpdateUser) {\n    updateUser(input: userDetails) {\n      id\n      email\n      familyName\n      givenName\n      googleId\n      imageUrl\n      name\n      bio\n      status\n    }\n  }\n`;\n\nexport const UPDATE_EMAIL = gql`\nmutation UpdateEmail($input: MutationUpdateEmail) {\n  updateEmail({id, email}: $input) {\n    id\n    email\n  }\n}\n`;\n\nexport const DELETE_USER = gql`\n  mutation DeleteUser($input: MutationDeleteUser) {\n    deleteUser(id: $input) {\n      id\n    }\n  }\n`;\n\nexport default userClient;\n"]},"metadata":{},"sourceType":"module"}